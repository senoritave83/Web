
Imports Classes

Namespace Pages.Pedidos

    Partial Public Class Pedidos
        Inherits XMWebPage
        Dim cls As clsPedido
        
        Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
            cls = New clsPedido()
            If Not Page.IsPostBack Then

                Dim sta As New clsStatus
                cboIDStatus.DataSource = sta.Listar
                cboIDStatus.DataBind()
                cboIDStatus.Items.Insert(0, New ListItem("TODOS", "0"))
                setComboValue(cboIDStatus, 3)
                sta = Nothing

                Dim tpp As New clsTipoPedido
                cboIDTipoPedido.DataSource = tpp.Listar
                cboIDTipoPedido.DataBind()
                cboIDTipoPedido.Items.Insert(0, New ListItem("TODOS", "0"))
                tpp = Nothing

                Dim gru As New clsGrupo
                cboGrupo.DataSource = gru.ListarGrupos_Usuario(Me.User.IDUser, True)
                cboGrupo.DataBind()
                cboGrupo.Items.Insert(0, New ListItem("TODOS", 0))
                gru = Nothing

                btnAprovarTodos.Visible = VerificaPermissao("Pedido", "Aprovar todos os pedidos pendentes")
                subAddConfirm(btnAprovarTodos, "Deseja realmente aprovar todos os pedidos pendentes?")

                txtDataEmissaoInicial.Text = Now.AddDays(-2).ToString("dd/MM/yyyy")
                txtDataEmissaoFinal.Text = Now.ToString("dd/MM/yyyy")

                CarregaGerenteVendas()
                CarregaSupervisor(0)
                CarregaVendedor(0)

                Me.RecuperaFiltro(Paginate1, cboGerenteVendas, cboSupervisor, cboVendedor, txtCliente, txtDataEmissaoInicial, txtDataEmissaoFinal, cboIDTipoPedido, cboIDStatus, cboGrupo)

                BindGrid()

            End If
        End Sub

        Public Sub CarregaGerenteVendas()


            Dim ven As New Classes.clsVendedor

            cboGerenteVendas.DataSource = ven.ListarGerenteVendas(Me.User.IDEmpresa)
            cboGerenteVendas.DataBind()
            cboGerenteVendas.Items.Insert(0, New ListItem("TODOS", 0))

            ven = Nothing


        End Sub

        Public Sub CarregaSupervisor(ByVal vIdGerenteVendas As Integer)

            Dim ven As New Classes.clsVendedor

            cboSupervisor.DataSource = ven.ListarSupervisores(vIdGerenteVendas)
            cboSupervisor.DataBind()
            cboSupervisor.Items.Insert(0, New ListItem("TODOS", 0))

            ven = Nothing

        End Sub


        Public Sub CarregaVendedor(ByVal vIdSupervisor As Integer, Optional ByVal vTodos As Boolean = True)

            Dim ven As New Classes.clsVendedor

            cboVendedor.DataSource = ven.ListarVendedoresSup(vIdSupervisor)
            cboVendedor.DataBind()
            If vTodos Then cboVendedor.Items.Insert(0, New ListItem("TODOS", 0))

            ven = Nothing

        End Sub

        Protected Sub cboGerenteVendas_SelectedIndexChanged(sender As Object, e As System.EventArgs) Handles cboGerenteVendas.SelectedIndexChanged
            CarregaSupervisor(cboGerenteVendas.SelectedItem.Value)
        End Sub

        Protected Sub cboSupervisor_SelectedIndexChanged(sender As Object, e As System.EventArgs) Handles cboSupervisor.SelectedIndexChanged
            CarregaVendedor(cboSupervisor.SelectedItem.Value)
        End Sub

        Public Sub BindGrid()

            Dim ret As IPaginaResult = cls.Listar(txtFiltro.Text, cboSupervisor.SelectedValue, cboVendedor.SelectedValue, txtCliente.Text, cboIDStatus.SelectedValue, cboIDTipoPedido.SelectedValue, txtDataEmissaoInicial.Text, txtDataEmissaoFinal.Text, cboGrupo.SelectedValue, Paginate1.SortExpression, Paginate1.SortDirection, Paginate1.CurrentPage, Profile.Settings.PAGESIZE)
            GridView1.DataSource = ret.Data
            GridView1.DataBind()
            Paginate1.DataSource = ret
            Paginate1.DataBind()
            ret = Nothing

            Me.GravaFiltro(Paginate1, cboGerenteVendas, cboSupervisor, cboVendedor, txtCliente, txtDataEmissaoInicial, txtDataEmissaoFinal, cboIDTipoPedido, cboIDStatus)

        End Sub
		
        Private Sub Paginate1_OnPageChanged() Handles Paginate1.OnPageChanged
            BindGrid()
        End Sub

        Protected Sub GridView1_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs) Handles GridView1.RowDataBound
            If e.Row.RowType = DataControlRowType.DataRow Then
                If e.Row.DataItem.Item("IDStatusPedido") = 2 Then
                    e.Row.CssClass = "PedidoReprovado"
                ElseIf e.Row.DataItem.Item("IDStatusPedido") = 1 Then
                    e.Row.CssClass = "PedidoAprovado"
                End If
            End If

        End Sub

        Private Sub GridView1_Sorted(ByVal sender As Object, ByVal e As System.EventArgs) Handles GridView1.Sorted
            BindGrid()
        End Sub
		

        Protected Sub btnFiltrar_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnFiltrar.Click
            Paginate1.CurrentPage = 0
            BindGrid()
        End Sub


        Private Sub GridView1_Sorting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewSortEventArgs) Handles GridView1.Sorting
            Paginate1.SortExpression = e.SortExpression
        End Sub


        Protected Sub btnAprovarTodos_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnAprovarTodos.Click
            plhConfirmar.Visible = True
            btnAprovarTodos.Visible = False
        End Sub

        Protected Sub btnConfirmar_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnConfirmar.Click
            Dim ret As clsPedido.stTotalAprovados = cls.AprovarTodosPendentes(txtMotivo.Text)
            plhConfirmar.Visible = False
            btnAprovarTodos.Visible = True
            ScriptManager.RegisterClientScriptBlock(Me, Me.GetType, "Aprovados", "fncAprovados(" & ret.Total & ", " & ret.Aprovados & ");", True)
        End Sub
    End Class

End Namespace

