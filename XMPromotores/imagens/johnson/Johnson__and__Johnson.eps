%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 193 193 
%%LanguageLevel: 2
%%Creator: CorelDRAW 11
%%Title: 2.eps
%%CreationDate: Mon May 26 19:17:33 2003
%%For: ldn
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW 11 Version 11.693
%Color profile: Disabled
/CorelIsEPS true def
%%BeginResource: procset wCorel11Dict 11.0 0
/wCorel11Dict 300 dict def wCorel11Dict begin
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true def}{@gs $t $c $m $y $k $n $o
@scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd/$pyf xd/$pxf xd/$pn xd}bd
/CorelPtrnDoFill{@gs $ctm setmatrix $pm concat CorelPtrnSetBBox wclip @sv Bburx
Bbury $pm itransform/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd
/$tllx xd newpath $tllx $tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx
$tlly m @cp pathbbox @rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx
sub def/$hei $tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{
$t $c $m $y $k $n $o @scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei
scale <00> 8 1 false[8 0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse
@gr $wid 0 gt $hei 0 gt and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub
/$phei xd exch sub/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd $hei $phei div
ceiling 1 add/$tly xd currentdict/CorelPtrnL2Pattern known $psy 0 eq and $psx 0
eq and{CorelPtrnL2Pattern}{$psx 0 eq{CorelPtrnTileVeritcal}{CorelPtrnTileHoriz
}ifelse}ifelse}if @gr @np/$bkg false def}bd/CorelPtrnSetBBox{pathbbox/$ury xd
/$urx xd/$lly xd/$llx xd}bd/CorelPtrnSetFirstTile{$tllx $pxf add dup $tllx gt
{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei add}if/$ty xd}bd/p{/$pm
xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}bd/CorelPtrnDraw{@ep}bd
/CorelPtrnPutTile{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei
sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{
/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0
$phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3
index sub Tl matrix currentmatrix/$ctm xd CorelPtrnDraw pop pop pop pop}{pop
pop}ifelse @rs}bd/CorelPtrnTileHoriz{CorelPtrnSetFirstTile 0 1 $tly 1 sub{dup
$psx mul $tx add{dup $llx gt{$pwid sub}{exit}ifelse}loop exch $phei mul $ty
exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1 roll add exch CorelPtrnPutTile
pop}for pop pop}for}bd/CorelPtrnTileVeritcal{CorelPtrnSetFirstTile 0 1 $tlx 1
sub{dup $pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}
{exit}ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub CorelPtrnPutTile pop}for
pop pop}for}bd L2? UseLevel 2 ge and{/CorelPtrnL2Pattern{@sv[$pn cvlit load
aload pop pop]$pwid $phei $pn cvlit load aload pop pop pop pop pathbbox pop pop
2 index sub exch 3 index sub 4 -2 roll pop pop exch matrix identmatrix
translate/PatternMatrix xd/PatternYStep xd/PatternXStep xd/PatternBBox xd
currentdict/PatternMainDict xd <</PaintType 1/PatternType 1/TilingType 1/BBox
PatternBBox/XStep PatternXStep/YStep PatternYStep/PaintProc{begin
PatternMainDict begin $ctm currentmatrix pop 0 CorelPtrnDraw end end}bind >>
PatternMatrix makepattern setpattern fill @rs}def}if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel11Dict begin
@BeginSysCorelDict
@ssa
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 192.75591 192.75591 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
0.00000 192.75591 m
192.75591 192.75591 L
192.75591 0.00000 L
0.00000 0.00000 L
0.00000 192.75591 L
@c
F

@rax %Note: Object
8.50394 95.77814 19.36346 106.49565 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
9.58139 101.15121 m
9.58139 103.68879 11.49534 105.60274 13.94787 105.60274 C
16.37235 105.60274 18.28602 103.68879 18.28602 101.15121 C
18.28602 98.57083 16.37235 96.67106 13.94787 96.67106 C
11.49534 96.67106 9.58139 98.57083 9.58139 101.15121 C
@c
13.94787 95.77814 m
16.86841 95.77814 19.36346 98.04643 19.36346 101.15121 C
19.36346 104.22737 16.86841 106.49565 13.94787 106.49565 C
10.99928 106.49565 8.50394 104.22737 8.50394 101.15121 C
8.50394 98.04643 10.99928 95.77814 13.94787 95.77814 C
@c
15.80542 100.14463 m
15.67757 99.35065 15.02532 98.79761 14.13241 98.79761 C
12.84208 98.79761 12.04866 99.90369 12.04866 101.17956 C
12.04866 102.49767 12.75761 103.50425 14.08989 103.50425 C
14.98252 103.50425 15.63477 102.99430 15.80542 102.21420 C
16.75502 102.21420 L
16.55631 103.66016 15.43663 104.44025 14.07572 104.44025 C
12.14731 104.44025 10.97093 103.05071 10.97093 101.16510 C
10.97093 99.30813 12.20400 97.86217 14.13241 97.86217 C
15.43663 97.86217 16.49962 98.74091 16.76891 100.14463 C
15.80542 100.14463 L
@c
F

@rax %Note: Object
23.72797 81.01587 98.70208 111.74003 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
96.51118 94.47024 m
96.16479 94.47024 96.17301 95.13269 96.26031 96.15713 C
96.33685 97.07329 96.47546 98.28170 96.47546 99.56665 C
96.47546 101.32668 96.18208 103.01386 94.86170 103.01386 C
93.28706 103.01386 91.45276 98.61392 91.08652 97.84375 C
90.60831 96.81761 90.35802 97.00072 90.35802 97.99115 C
90.33307 100.51965 L
90.33307 101.83918 89.61874 102.38967 88.73915 102.38967 C
86.85014 102.38967 85.67575 100.66649 85.25565 100.57436 C
84.88998 100.50151 84.63203 100.74132 84.35764 101.08743 C
84.48576 100.95987 L
84.13795 101.56450 83.77058 101.85817 82.94627 102.20683 C
82.12110 102.51836 80.89200 102.42624 80.89200 100.95987 C
80.89200 99.12671 82.79858 98.83332 84.19153 98.83332 C
84.19153 97.14784 L
84.20202 96.79493 84.13398 96.46072 84.01124 96.15713 C
83.60929 95.15820 82.62397 94.47024 81.80816 94.47024 C
80.53767 94.47024 79.77543 95.11342 79.41572 96.15713 C
79.64617 95.82605 79.05770 96.56164 79.05770 97.66063 C
79.05770 98.50252 78.91172 99.89717 80.15868 101.14384 C
81.18539 102.20683 81.00255 102.68277 80.08554 102.68277 C
77.04340 102.68277 74.25581 99.12671 73.70561 99.12671 C
72.56891 99.12671 72.16384 102.68277 71.54164 102.68277 C
70.65326 102.68277 70.09030 99.46602 68.23559 96.15713 C
68.02299 95.77701 67.79367 95.39717 67.54592 95.02072 C
66.73833 93.81033 66.51808 94.43367 66.51241 95.24041 C
66.51354 96.15713 L
66.51808 100.95987 L
66.51808 103.19698 64.20756 102.94044 63.32882 100.99616 C
62.52180 99.27354 61.49594 97.33039 61.49594 97.33039 C
60.94545 96.22913 60.61521 96.41367 60.57808 97.14784 C
60.57808 100.66649 L
60.57808 103.08671 58.67206 102.86646 57.71877 101.25269 C
54.76819 96.15713 L
54.49294 95.68035 L
53.94076 94.80019 53.64794 94.80019 53.61222 95.46009 C
53.61222 96.15713 L
53.61222 100.22683 L
53.61222 100.95987 53.53824 102.57279 52.21814 102.57279 C
50.45726 102.57279 48.66123 96.48737 47.74564 96.48737 C
47.74564 101.83918 L
49.28542 103.23411 50.67893 106.38680 50.67893 108.80589 C
50.67893 109.75975 50.38469 111.30009 49.13773 111.30009 C
47.23228 111.30009 45.76422 108.95386 45.76422 105.13984 C
45.61795 101.17984 L
45.19701 100.05506 44.52690 99.86400 42.80797 99.71773 C
42.31899 101.48485 41.26365 101.98630 40.26444 101.98630 C
39.27600 101.98630 38.79836 101.25269 38.79836 100.55622 C
38.79836 98.94161 40.23780 98.43109 41.76425 98.42060 C
41.87055 97.67027 41.86602 96.85956 41.68658 96.15713 C
41.41843 95.09868 40.41213 94.28825 39.53140 94.28825 C
37.99219 94.36054 37.11061 94.87162 36.79285 96.15713 C
36.09751 98.04699 37.06809 100.83827 38.46784 102.09742 C
35.49713 101.25269 32.63754 98.98044 31.61140 97.58580 C
30.76753 100.51965 30.62126 105.94743 31.61140 111.74003 C
27.87137 111.74003 23.72797 106.86302 23.72797 101.94973 C
23.72797 97.07329 26.47786 93.99430 27.13748 93.62721 C
27.94365 93.18699 28.05534 93.04016 27.72369 92.30712 C
26.62328 91.13471 25.01036 86.14828 25.01036 84.60964 C
25.01036 82.92274 25.15748 81.01587 26.91865 81.01587 C
28.23761 81.01587 30.43644 83.94917 31.31802 87.10101 C
31.90337 89.44781 31.94079 94.00394 31.72110 95.90939 C
31.72110 95.98989 31.73131 96.07181 31.74973 96.15713 C
32.01392 97.37490 34.09002 98.90929 34.94806 98.94274 C
34.76636 97.87550 34.73093 96.94687 34.81739 96.15713 C
35.27773 93.92088 36.52356 92.38082 38.68838 92.38082 C
41.30135 92.38082 42.67049 93.94809 43.00554 96.15713 C
43.06139 96.51912 43.08690 96.89896 43.08690 97.29269 C
43.08690 97.73915 43.06592 98.14139 43.02652 98.51131 C
43.88230 98.64142 44.64085 98.88605 45.03260 99.12671 C
45.50825 99.60378 45.69165 99.56665 45.69165 98.39254 C
45.69165 98.39254 45.69165 97.28731 45.69165 96.15713 C
45.69165 95.19817 45.69165 94.22079 45.69165 93.88460 C
45.69165 93.15156 45.72794 92.38082 46.64523 92.38082 C
47.34765 92.38082 48.28450 94.33644 49.05043 96.15713 C
49.56491 97.38198 50.00372 98.54532 50.23701 99.01616 C
50.82463 100.07943 51.30227 100.04372 51.30227 99.12671 C
51.30227 99.12671 51.30227 97.59883 51.30227 96.15713 C
51.30227 95.39263 51.30227 94.65789 51.30227 94.17628 C
51.30227 92.92989 51.85332 92.38082 52.76863 92.38082 C
53.73071 92.38082 54.86683 94.27238 55.86803 96.15713 C
56.46784 97.28589 57.02315 98.41238 57.46082 99.12671 C
58.05043 100.11600 58.30328 100.15257 58.30328 99.16328 C
58.30328 99.16328 58.30328 97.56709 58.30328 96.15713 C
58.30328 95.28406 58.30328 94.48583 58.30328 94.17628 C
58.30328 93.33383 58.59808 92.38082 59.29427 92.38082 C
60.09534 92.38082 61.28504 94.31858 62.19638 96.15713 C
62.17937 96.15713 L
62.15499 96.25748 62.95635 97.81654 63.43880 99.05357 C
64.02501 100.63020 64.46183 100.15257 64.46183 98.83332 C
64.46438 96.15713 L
64.46608 94.47024 L
64.46608 93.15156 65.01572 92.34340 65.71361 92.34340 C
67.28343 92.34340 68.28265 94.26104 69.24302 96.15713 C
69.76091 97.18271 70.26661 98.20035 70.84545 98.90674 C
71.12891 98.57622 71.11502 98.35852 71.50592 97.22041 C
71.72504 96.48737 70.62491 95.97317 70.62491 94.28825 C
70.62491 92.82161 71.28624 92.52822 72.01843 92.52822 C
72.75288 92.52822 74.14498 93.55493 74.14498 95.68035 C
74.14498 97.14784 73.77817 96.85389 73.77817 97.88003 C
74.14498 98.68677 76.34523 100.59335 77.66674 100.66649 C
77.00513 100.00658 76.49178 98.39254 76.49178 97.29269 C
76.49178 96.90123 76.53203 96.51912 76.60658 96.15713 C
77.06041 93.96935 78.80882 92.38082 81.03770 92.38082 C
83.45906 92.38082 84.85172 94.28825 85.18167 96.12142 C
85.18365 96.13219 85.18564 96.14608 85.18734 96.15713 C
85.36762 97.27739 85.43764 98.26384 85.25565 99.63921 C
85.77014 99.75033 86.44592 100.22683 86.75915 100.55622 C
87.67701 101.49109 87.96784 100.51965 87.96784 99.16328 C
87.96784 96.15713 L
87.96784 94.36054 L
87.96784 92.96787 88.22580 92.34340 89.03254 92.34340 C
89.91780 92.34340 90.43965 93.95348 91.38784 96.15713 C
91.81134 97.14274 92.32413 98.24825 92.99083 99.38268 C
93.50731 100.48365 93.83443 100.37339 93.83443 99.41924 C
93.83443 96.15713 L
93.83443 95.60665 L
93.83443 93.26154 94.42318 92.38082 95.44819 92.38082 C
96.51118 92.38082 97.61301 93.62721 98.34491 95.09528 C
98.57707 95.59219 98.67855 95.93291 98.70208 96.15713 C
98.21991 96.15713 L
97.68643 95.03972 97.19461 94.47024 96.51118 94.47024 C
@c
83.45906 100.00658 m
81.80447 100.00658 81.66189 101.03329 82.28721 101.03329 C
83.53559 101.03329 84.04469 100.00658 83.45906 100.00658 C
@c
29.77795 85.63578 m
29.41115 84.46139 28.45644 82.70277 27.57770 82.70277 C
26.54986 82.70277 26.33131 85.04957 26.33131 85.04957 C
26.40387 87.61635 27.94365 91.72148 29.11748 93.04016 C
29.85392 93.62721 29.99906 93.40753 29.99906 92.52822 C
30.21761 91.20699 30.28932 87.24813 29.77795 85.63578 C
@c
29.33915 95.38639 m
28.97093 94.58107 28.67698 93.18699 27.87137 94.21455 C
26.18561 96.48737 25.74425 101.61950 25.74425 101.83918 C
25.74425 106.45994 27.50372 109.46636 30.65811 110.71474 C
28.45644 105.72718 28.53099 98.61392 29.33915 95.38639 C
@c
40.30129 100.84961 m
40.73272 101.02620 41.16557 100.49584 41.46123 99.67351 C
39.73833 99.76904 39.60397 100.54715 40.30129 100.84961 C
@c
48.99118 110.42135 m
49.65109 110.42135 49.94504 106.31310 47.74564 103.38009 C
47.55827 104.07798 47.52000 105.48340 47.51631 106.15550 C
47.48428 106.27370 47.43043 110.42135 48.99118 110.42135 C
@c
72.09071 93.70035 m
71.57849 93.66406 71.17597 94.06658 72.12869 95.53266 C
72.49691 96.10044 72.75288 93.70035 72.09071 93.70035 C
@c
F

@rax %Note: Object
47.51603 106.15266 47.52454 106.53109 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
47.51631 106.15550 m
47.52000 106.14132 47.52454 106.18101 47.52454 106.31310 C
47.52454 106.68813 47.51376 106.54214 47.51631 106.15550 C
@c
F

@rax %Note: Object
100.18091 81.30954 184.25197 111.74003 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
183.89055 96.70706 m
183.85115 96.61550 183.80778 96.52762 183.76696 96.44882 C
183.23008 95.33310 182.73969 94.76419 182.05739 94.76419 C
181.70929 94.76419 181.71893 95.42494 181.80340 96.44882 C
181.88249 97.36526 182.02139 98.57622 182.02139 99.85918 C
182.02139 101.61950 181.72715 103.30611 180.40819 103.30611 C
178.83184 103.30611 176.99783 98.90674 176.63046 98.13713 C
176.15537 97.10929 175.90365 97.29269 175.90365 98.28369 C
175.87956 100.81332 L
175.87956 102.13342 175.16438 102.68277 174.28479 102.68277 C
172.39663 102.68277 171.22280 100.95987 170.80186 100.86775 C
170.43307 100.79490 170.17710 101.03329 169.90328 101.38167 C
170.03055 101.25269 L
169.68359 101.85817 169.31480 102.15099 168.49077 102.50022 C
167.66674 102.81175 166.43679 102.71906 166.43679 101.25269 C
166.43679 99.41924 168.34309 99.12671 169.73631 99.12671 C
169.73631 97.44094 L
169.74595 97.08803 169.67679 96.75439 169.55745 96.44882 C
169.15436 95.45187 168.17046 94.76419 167.35351 94.76419 C
166.08416 94.76419 165.32362 95.40709 164.96050 96.44882 C
164.71417 96.85389 164.63906 97.03814 164.56819 97.73376 C
164.41937 98.98044 164.45707 100.18998 165.70403 101.43609 C
166.73102 102.50022 166.54819 102.97672 165.63061 102.97672 C
162.58592 102.97672 159.80088 99.41924 159.25068 99.41924 C
158.11370 99.41924 157.71005 102.97672 157.08643 102.97672 C
156.19890 102.97672 155.63707 99.75940 153.78123 96.44882 C
153.56976 96.07124 153.33817 95.68913 153.09099 95.31269 C
152.28425 94.10400 152.06372 94.72706 152.05805 95.53266 C
152.05805 96.44882 L
152.06372 101.25269 L
152.06372 103.48951 149.75263 103.23411 148.87446 101.28926 C
148.06630 99.56665 147.03959 97.62435 147.03959 97.62435 C
146.48939 96.52394 146.16142 96.70706 146.12457 97.44094 C
146.12457 100.95987 L
146.12457 103.38009 144.21572 103.16013 143.26356 101.54665 C
140.31213 96.44882 L
140.03688 95.97317 L
139.48668 95.09528 139.19244 95.09528 139.15672 95.75320 C
139.15672 96.44882 L
139.15672 100.51965 L
139.15672 101.25269 139.08472 102.86646 137.76321 102.86646 C
136.00176 102.86646 134.20715 96.78104 133.29128 96.78104 C
133.29128 102.13342 L
134.82935 103.52636 136.22542 106.68076 136.22542 109.10013 C
136.22542 110.05313 135.92976 111.59376 134.68337 111.59376 C
132.77622 111.59376 131.30872 109.24611 131.30872 105.43408 C
131.16359 101.47436 L
130.74123 100.34901 130.07197 100.15710 128.35332 100.01112 C
127.86265 101.77937 126.80872 102.27969 125.80866 102.27969 C
124.82107 102.27969 124.34287 101.54665 124.34287 100.84961 C
124.34287 99.23414 125.78315 98.72589 127.30932 98.71427 C
127.41364 97.96337 127.40995 97.15294 127.23024 96.44882 C
126.96293 95.39036 125.95776 94.58107 125.07647 94.58107 C
123.53584 94.65420 122.65654 95.16784 122.33934 96.44882 C
121.88580 98.31940 122.61373 101.13137 124.01150 102.38967 C
121.04164 101.54665 118.18205 99.27354 117.15591 97.88003 C
116.75282 100.77732 116.82482 105.69033 117.63156 111.74003 C
113.89209 111.74003 109.63928 107.12013 109.63928 102.20683 C
109.63928 100.22683 110.26346 98.46680 110.66513 97.51323 C
110.77654 97.22041 111.14220 96.56164 110.55430 96.30482 C
110.19005 96.48737 108.24463 96.33997 107.62243 96.04658 C
107.73241 97.47609 107.40132 99.20069 106.70598 100.48365 C
106.04608 100.77732 105.71641 100.44680 105.27449 99.93373 C
105.64498 99.20069 105.90038 97.99115 105.82583 97.10929 C
105.01965 98.06428 103.84583 98.54107 102.34035 98.61392 C
101.60929 98.61392 100.18091 98.20942 100.18091 97.00072 C
100.18091 95.24041 101.90353 94.50737 105.67871 94.50737 C
106.15578 94.50737 106.52400 94.32369 106.41175 93.59036 C
106.37631 92.96787 106.41175 92.78362 106.55830 92.67420 C
106.55830 92.67420 107.18192 92.78362 107.27405 93.33383 C
107.58472 95.38639 108.09921 95.16784 109.75011 95.35039 C
111.54671 95.35039 111.76583 95.68035 112.86624 94.28825 C
113.34246 93.73748 113.54485 93.49852 113.19591 92.89474 C
111.87581 90.76932 110.55430 87.01002 110.55430 85.47137 C
110.55430 83.78362 110.70397 81.30954 112.46428 81.30954 C
113.78324 81.30954 115.98208 84.24283 116.86422 87.39468 C
117.44901 89.74205 117.48586 94.29562 117.26674 96.20306 C
117.26674 96.28328 117.27638 96.36661 117.29480 96.44882 C
117.55984 97.66800 119.63594 99.20296 120.49370 99.23641 C
120.31342 98.16860 120.27713 97.24025 120.36246 96.44882 C
120.71140 93.70035 122.07118 92.67420 124.23260 92.67420 C
126.84557 92.67420 128.21556 94.24318 128.55203 96.44882 C
128.60731 96.81165 128.63225 97.19206 128.63225 97.58580 C
128.63225 98.03197 128.61156 98.43477 128.57102 98.80356 C
129.42822 98.93367 130.18649 99.17830 130.57710 99.41924 C
131.05332 99.89717 131.23616 99.85918 131.23616 98.68677 C
131.23616 98.68677 131.23616 97.58069 131.23616 96.44882 C
131.23616 95.49043 131.23616 94.51474 131.23616 94.17628 C
131.23616 93.44353 131.27301 92.67420 132.19087 92.67420 C
132.89244 92.67420 133.82986 94.62926 134.59606 96.44882 C
135.11083 97.67480 135.54624 98.83871 135.78435 99.31096 C
136.37055 100.37339 136.84620 100.33682 136.84620 99.41924 C
136.84620 99.41924 136.84620 97.89222 136.84620 96.44882 C
136.84620 95.68658 136.84620 94.94986 136.84620 94.47024 C
136.84620 93.22356 137.39783 92.67420 138.31342 92.67420 C
139.27578 92.67420 140.40992 94.56576 141.41310 96.44882 C
142.01490 97.57843 142.56709 98.70520 143.00589 99.41924 C
143.59436 100.40910 143.84976 100.44680 143.84976 99.45638 C
143.84976 99.45638 143.84976 97.86047 143.84976 96.44882 C
143.84976 95.57802 143.84976 94.77865 143.84976 94.47024 C
143.84976 93.62721 144.14258 92.67420 144.84189 92.67420 C
145.64041 92.67420 146.83011 94.61339 147.74088 96.44882 C
147.72557 96.44882 L
147.70120 96.54945 148.50198 98.10850 148.98274 99.34668 C
149.56980 100.92274 150.00350 100.44680 150.00350 99.12671 C
150.00917 96.44882 L
150.01058 94.76419 L
150.01058 93.44353 150.56135 92.63707 151.25698 92.63707 C
152.82935 92.63707 153.82857 94.55443 154.78809 96.44882 C
155.30598 97.47609 155.81027 98.49345 156.39052 99.20069 C
156.67512 98.86932 156.65981 98.65219 157.05099 97.51323 C
157.27011 96.78104 156.17027 96.26740 156.17027 94.58107 C
156.17027 93.11471 156.83187 92.82161 157.56293 92.82161 C
158.29795 92.82161 159.68948 93.84775 159.68948 95.97317 C
159.68948 97.44094 159.32466 97.14784 159.32466 98.17427 C
159.68948 98.98044 161.88917 100.88617 163.21181 100.95987 C
162.55162 100.30025 162.03770 98.68677 162.03770 97.58580 C
162.03770 97.19376 162.07654 96.81165 162.15222 96.44882 C
162.60633 94.26331 164.35191 92.67420 166.58135 92.67420 C
169.00469 92.67420 170.39934 94.58107 170.72674 96.41367 C
170.72872 96.42501 170.73128 96.43946 170.73241 96.44882 C
170.91326 97.57134 170.98271 98.55638 170.80186 99.93373 C
171.31323 100.04372 171.99014 100.51965 172.30507 100.84961 C
173.22123 101.78476 173.51405 100.81332 173.51405 99.45638 C
173.51405 96.44882 L
173.51405 94.65420 L
173.51405 93.26154 173.76973 92.63707 174.57789 92.63707 C
175.46230 92.63707 175.98416 94.24687 176.93093 96.44882 C
177.35896 97.43641 177.86778 98.54277 178.53704 99.67748 C
179.05181 100.77732 179.38091 100.66649 179.38091 99.71291 C
179.38091 96.44882 L
179.38091 95.90088 L
179.38091 93.55493 179.96683 92.67420 180.99354 92.67420 C
182.05739 92.67420 183.15808 93.92088 183.89055 95.38639 C
184.12214 95.88557 184.22107 96.22602 184.24630 96.44882 C
184.29789 96.93865 183.99231 96.88195 183.89055 96.70706 C
@c
169.00469 100.30025 m
167.34954 100.30025 167.20753 101.32668 167.82973 101.32668 C
169.08038 101.32668 169.59005 100.30025 169.00469 100.30025 C
@c
105.31191 95.31269 m
103.80954 95.31269 102.26778 96.01115 102.26778 96.81761 C
102.26778 97.62435 102.67228 97.84375 103.47902 97.58580 C
105.60614 96.52394 105.31191 96.01115 105.31191 95.31269 C
@c
111.61899 102.27969 m
111.61899 106.90016 113.37874 109.90743 116.53370 111.15383 C
114.33402 106.16683 114.40602 99.05357 115.21162 95.82605 C
114.84624 95.02072 114.55370 93.62721 113.74498 94.65420 C
112.06063 96.92759 111.61899 102.06057 111.61899 102.27969 C
@c
115.32246 85.92860 m
114.95679 84.75619 114.00293 82.99446 113.12362 82.99446 C
112.09550 82.99446 111.87581 85.34353 111.87581 85.34353 C
111.94894 87.90860 113.48957 92.01515 114.66142 93.33383 C
115.39502 93.92088 115.54356 93.70035 115.54356 92.82161 C
115.76183 91.49924 115.83581 87.54123 115.32246 85.92860 C
@c
125.84665 101.14384 m
126.27751 101.32016 126.70951 100.78951 127.00743 99.96803 C
125.28283 100.06271 125.14847 100.84110 125.84665 101.14384 C
@c
134.53767 110.71474 m
135.19474 110.71474 135.49153 106.60649 133.29128 103.67348 C
133.10447 104.37165 133.06564 105.77735 133.06195 106.44917 C
133.03077 106.55093 132.97209 110.71474 134.53767 110.71474 C
@c
157.63691 93.99430 m
157.12441 93.95830 156.71991 94.36054 157.67518 95.82605 C
158.04255 96.39213 158.29795 93.99430 157.63691 93.99430 C
@c
F

@rax %Note: Object
133.06195 106.44690 133.06961 106.82447 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
133.06195 106.44917 m
133.06649 106.43669 133.06961 106.47666 133.06961 106.60649 C
133.06961 106.98180 133.05997 106.83524 133.06195 106.44917 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel11Dict 11.0 0
%%EOF
